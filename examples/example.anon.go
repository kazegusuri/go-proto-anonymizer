// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: examples/example.proto

/*
Package examples is a generated protocol buffer package.

It is generated from these files:
	examples/example.proto

It has these top-level messages:
	SimpleMessage
	NumberMessage
	RepeatedNumberMessage
	NestedMessage
	EnumMessage
	Oneof
	NormalOneof
	OneofMessage
	NormalOneofMessage
	MapMessage
	WellKnownTypeMessage
*/
package examples

import github_com_kazegusuri_go_proto_anonymizer "github.com/kazegusuri/go-proto-anonymizer"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/kazegusuri/go-proto-anonymizer"
import _ "github.com/golang/protobuf/ptypes/duration"
import _ "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (m *SimpleMessage) Anonymize() {
	if m == nil {
		return
	}
	m.StringValue = ""
	m.BoolValue = false
}

func (m *NumberMessage) Anonymize() {
	if m == nil {
		return
	}
	m.FloatValue = 0
	m.DoubleValue = 0
	m.Int32Value = 0
	m.Int64Value = 0
	m.Uint32Value = 0
	m.Uint64Value = 0
	m.Sint32Value = 0
	m.Sint64Value = 0
	m.Fixed32Value = 0
	m.Fixed64Value = 0
	m.Sfixed32Value = 0
	m.Sfixed64Value = 0
}

func (m *RepeatedNumberMessage) Anonymize() {
	if m == nil {
		return
	}
	m.FloatValues = nil
	m.DoubleValues = nil
	m.Int32Values = nil
	m.Int64Values = nil
	m.Uint32Values = nil
	m.Uint64Values = nil
	m.Sint32Values = nil
	m.Sint64Values = nil
	m.Fixed32Values = nil
	m.Fixed64Values = nil
	m.Sfixed32Values = nil
	m.Sfixed64Values = nil
}

func (m *NestedMessage) Anonymize() {
	if m == nil {
		return
	}
	m.NestedValue = nil
	m.RepeatedNestedValues = nil
	github_com_kazegusuri_go_proto_anonymizer.Anonymize(m.NormalNestedValue)
	for i := range m.NormalRepeatedNestedValues {
		github_com_kazegusuri_go_proto_anonymizer.Anonymize(m.NormalRepeatedNestedValues[i])
	}
}

func (m *NestedMessage_Nested) Anonymize() {
	if m == nil {
		return
	}
	m.Int32Value = 0
	m.StringValue = ""
}

func (m *EnumMessage) Anonymize() {
	if m == nil {
		return
	}
	m.NumericEnumValue = 0
	m.RepeatedNumericEnumValues = nil
	m.AliasedEnumValue = 0
	m.NestedEnumValue = 0
	m.RepeatedNestedEnumValues = nil
}

func (m *Oneof) Anonymize() {
	if m == nil {
		return
	}
	if ov, ok := m.GetOneofValue().(*Oneof_Int32Value); ok {
		ov.Int32Value = 0
	}
	if ov, ok := m.GetOneofValue().(*Oneof_StringValue); ok {
		ov.StringValue = ""
	}
}

func (m *NormalOneof) Anonymize() {
	if m == nil {
		return
	}
	if ov, ok := m.GetOneofValue().(*NormalOneof_Int32Value); ok {
		_ = ov.Int32Value
	}
	if ov, ok := m.GetOneofValue().(*NormalOneof_StringValue); ok {
		_ = ov.StringValue
	}
}

func (m *OneofMessage) Anonymize() {
	if m == nil {
		return
	}
	if ov, ok := m.GetOneofValue().(*OneofMessage_Int32Value); ok {
		ov.Int32Value = 0
	}
	if ov, ok := m.GetOneofValue().(*OneofMessage_StringValue); ok {
		ov.StringValue = ""
	}
	m.OneofMessageValue = nil
	m.RepeatedOneofValues = nil
	github_com_kazegusuri_go_proto_anonymizer.Anonymize(m.NormalOneofMessageValue)
	for i := range m.NormalRepeatedOneofValues {
		github_com_kazegusuri_go_proto_anonymizer.Anonymize(m.NormalRepeatedOneofValues[i])
	}
}

func (m *NormalOneofMessage) Anonymize() {
	if m == nil {
		return
	}
	m.OneofMessageValue = nil
	m.RepeatedOneofValues = nil
	github_com_kazegusuri_go_proto_anonymizer.Anonymize(m.NormalOneofMessageValue)
	for i := range m.NormalRepeatedOneofValues {
		github_com_kazegusuri_go_proto_anonymizer.Anonymize(m.NormalRepeatedOneofValues[i])
	}
}

func (m *MapMessage) Anonymize() {
	if m == nil {
		return
	}
	m.MappedValue = nil
	m.MappedEnumValue = nil
	m.MappedNestedValue = nil
	for mk := range m.NormalMappedValue {
		_ = m.NormalMappedValue[mk]
	}
	for mk := range m.NormalMappedEnumValue {
		_ = m.NormalMappedEnumValue[mk]
	}
	for mk := range m.NormalMappedNestedValue {
		github_com_kazegusuri_go_proto_anonymizer.Anonymize(m.NormalMappedNestedValue[mk])
	}
}

func (m *WellKnownTypeMessage) Anonymize() {
	if m == nil {
		return
	}
}
